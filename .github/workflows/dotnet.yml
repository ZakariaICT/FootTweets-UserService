# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: nosinovacao/dotnet-sonar:latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

  test:
    runs-on: ubuntu-latest
    container:
      image: nosinovacao/dotnet-sonar:latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Test
      run: dotnet test --no-build --verbosity normal

  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image
      run: docker build -t zakaria469980/foots_userservice .



    # - name: Log in to Azure Container Registry
    #   run: echo "${{ secrets.ACR_PASSWORD }}" | docker login foottweetscr.azurecr.io -u "${{ secrets.ACR_USERNAME }}" --password-stdin

    # - name: Tag and Push Docker image to ACR
    #   run: |
    #     docker tag zakaria469980/realestuserservice foottweetscr.azurecr.io/userservice:latest
    #     docker push foottweetscr.azurecr.io/userservice:latest

    # - name: Push to Sonar Cloud - Begin Analysis
    #   run: dotnet /sonar-scanner/SonarScanner.MSBuild.dll begin /o:"zakariaict" /k:"ZakariaICT_FootTweets-UserService" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    # - name: Build for Sonar Cloud Analysis
    #   run: dotnet build

    # - name: Push to Sonar Cloud - End Analysis
    #   run: dotnet /sonar-scanner/SonarScanner.MSBuild.dll end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"



        










